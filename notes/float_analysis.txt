======================
Floating point Algebra
======================

(This is just me working through Robin Leroy's essay from the Principia
library.  Nothing innovative here from me...)


Base Exponential form
=====================

First define the fractional part of a real number :math:`a` as

.. math::

   \text{frac} \ a \equiv a - \lfloor a \rfloor \in [0,1).

The fractional part is truly fractional and is always less than one, and it is
zero when there is no fractional part.

Next, consider the term :math:`\lfloor \log_2 a \rfloor`, which tells you the
power-of-two bound of :math:`a` from below.  For example, :math:`\lfloor \log_2
15.5 \rfloor` is 3, since it is bounded by :math:`2^3` and :math:`2^4`.  The
remaining bit of :math:`a` is the part which cannot be expressed as a power of
two, and behaves as a "fraction" with respect to this factor.

Using these two operators, we hope to define :math:`a` in terms of a
representative exponent and a fractional correction which returns :math:`a`.
Begin with the following decomposition.

.. math::

   a = 2^{\log_2 a} = 2^{\lfloor \log_2 a \rfloor}
      2^{\text{frac} \left( \log_2 a \right)}.

Next, split the fractional correction as

.. math::

   a = 2^{\lfloor \log_2 a \rfloor} \left(
       \lfloor 2^{\text{frac} \left( \log_2 a \right)} \rfloor
       + \text{frac} \left(
          2^{\text{frac} \left( \log_2 a \right)}
       \right)
     \right).

Since :math:`\text{frac}(\ldots) \in [0,1)`, the first term is always one, and

.. math::

   a = 2^{\lfloor \log_2 a \rfloor} \left( 1 
       + \text{frac} \left(
          2^{\text{frac} \left( \log_2 a \right)}
       \right)
     \right).

The final term can be written as

.. math::

   \text{frac} \left( 2^{\text{frac}(\log_2 a)} \right)
   & = \text{frac} \left( 2^{\log_2 a - \lfloor \log_2 a \rfloor} \right) \\
   & = \text{frac} \left( 2^{-\lfloor \log_2 a \rfloor} a \right). \\

This form makes explicit that the fractional term is the value of :math:`a`
after it has been rescaled by :math:`2^{-\lfloor \log_2 a \rfloor}`, so that it
is between :math:`2^{\lfloor \log_2 a \rfloor}` and :math:`2^{\lfloor \log_2 a
\rfloor + 1}`.

If one wishes to remove the frac operator entirely, then expand the frac
operator as

.. math::

   \text{frac} \left( 2^{-\lfloor \log_2 a \rfloor} \right)
      & = 2^{-\lfloor \log_2 a \rfloor} a
         - \lfloor 2^{-\lfloor \log_2 a \rfloor} a \rfloor \\
      & = 2^{-\lfloor \log_2 a \rfloor} a - 1 \\
         

Bringing it all together, we can write any real number :math:`a` as

.. math::

   a &= 2^{\lfloor \log_2 a \rfloor}
      \left( 1 + \text{frac} \ 2^{-\lfloor \log_2 a \rfloor} \right) \\
     &= 2^{\lfloor \log_2 a \rfloor}
      \left( 1 + \left( 2^{-\lfloor \log_2 a \rfloor} a - 1 \right) \right) \\

which is the standard form of a modern floating point number.

(Although the second form is mostly a tautology, I feel like there is still some
value here in showing how to algebraically working towards a result.  Maybe
there's a more intuitive way to get to this result.)

This does not yet represent an actual floating point number, but only the
general exponential decomposition used by such numbers.  The actual "floating"
comes about after one considers the change in fractional terms in response to
changing exponents.  This is when floating point analysis becomes more
complicated.


Fixed point form
----------------

Not only can the usual floating 

First consider a number :math:`a` and its computational counterpart :math:`A`.

.. math::

   A \equiv b + \lfloor \log_2 a \rfloor + \text{frac}  

TODO...
